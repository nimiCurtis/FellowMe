# http://wiki.ros.org/teb_local_planner
# https://github.com/rst-tu-dortmund/teb_local_planner_tutorials/blob/melodic-devel/cfg/diff_drive/teb_local_planner_params.yaml

base_local_planner: teb_local_planner/TebLocalPlannerROS

TebLocalPlannerROS: 

  odom_topic: /fellowme/mobile_base_controller/odom
  map_frame: map

  # Trajectory

  teb_autosize: True
  dt_ref: 0.3 # Desired temporal resolution of the trajectory (the trajectory is not fixed to dt_ref since the temporal resolution is part of the optimization, but the trajectory will be resized between iterations if dt_ref +-dt_hysteresis is violated
  dt_hysteresis: 0.1 # Hysteresis for automatic resizing depending on the current temporal resolution, usually approx. 10% of dt_ref is recommended
  min_samples: 5 # Minimum number of samples (should be always greater than 2)
  max_samples: 10
  global_plan_overwrite_orientation: True # Overwrite orientation of local subgoals provided by the global planner (since they often provide only a 2D path)
  allow_init_with_backwards_motion: False # If true, underlying trajectories might be initialized with backwards motions in case the goal is behind the start within the local costmap (this is only recommended if the robot is equipped with rear sensors).
  max_global_plan_lookahead_dist: 3.0 # Specify the maximum length (cumulative Euclidean distances) of the subset of the global plan taken into account for optimization.
  global_plan_viapoint_sep: -1 # ?
  global_plan_prune_distance: 1 # ?
  exact_arc_length: False
  feasibility_check_no_poses: 5 # Specify up to which pose on the predicted plan the feasibility should be checked each sampling interval.
  publish_feedback: True

  # Robot

  max_vel_x: 1.0 # Maximum translational velocity of the robot in meters/sec
  max_vel_x_backwards: 0.2 # Maximum absolute translational velocity of the robot while driving backwards in meters/sec. See optimization parameter weight_kinematics_forward_drive
  max_vel_theta: 1.0 # Maximum angular velocity of the robot in radians/sec
  acc_lim_x: 0.5 # Maximum translational acceleration of the robot in meters/sec^2
  acc_lim_theta: 0.3 # Maximum angular acceleration of the robot in radians/sec^2
  min_turning_radius: 0.0 # diff-drive robot (can turn on place!)

  footprint_model: # Specify the robot footprint model type used for optimization. Different types are "point", "circular", "line", "two_circles" and "polygon." The type of the model significantly influences the required computation time.
    type: "circular" 
    radius: 0.17 # This parameter is only relevant for type "circular". It contains the radius of the circle. The center of the circle is located at the robot's axis of rotation.

  # GoalTolerance

  xy_goal_tolerance: 0.2 # Allowed final euclidean distance to the goal position in meters
  yaw_goal_tolerance: 0.1  # Allowed final orientation error in radians
  free_goal_vel: False # Remove the goal velocity constraint such that the robot can arrive at the goal with maximum speed
  complete_global_plan: True

  # Obstacles

  min_obstacle_dist: 0.3 # Minimum desired separation from obstacles in meters
  inflation_dist: 0.25 # Buffer zone around obstacles with non-zero penalty costs (should be larger than min_obstacle_dist in order to take effect). Also refer to the weight weight_inflation.
  include_costmap_obstacles: True # Specify if obstacles of the local costmap should be taken into account
  costmap_obstacles_behind_robot_dist: 0.5 # Limit the occupied local costmap obstacles taken into account for planning behind the robot (specify distance in meters).
  obstacle_poses_affected: 30 #?
  dynamic_obstacle_inflation_dist: 0.2
  #include_dynamic_obstacles: True
  legacy_obstacle_association: True # The strategy of connecting trajectory poses with obstacles for optimization has been modified (see changelog). You can switch to the old/previous strategy by setting this parameter to true. Old strategy: for each obstacle, find the nearest TEB pose; new strategy: for each teb pose, find only "relevant" obstacles
  costmap_converter_plugin: "" 
  costmap_converter_spin_thread: True
  costmap_converter_rate: 5

  # Optimization

  no_inner_iterations: 5
  no_outer_iterations: 4
  optimization_activate: True
  optimization_verbose: False
  penalty_epsilon: 0.1 # Add a small safety margin to penalty functions for hard-constraint approximations
  obstacle_cost_exponent: 4
  weight_max_vel_x: 2
  weight_max_vel_theta: 1
  weight_acc_lim_x: 1
  weight_acc_lim_theta: 1
  weight_kinematics_nh: 1000
  weight_kinematics_forward_drive: 1 # Optimization weight for forcing the robot to choose only forward directions (positive transl. velocities). A small weight (e.g. 1.0) still allows driving backwards. A value around 1000 almost prevents backward driving (but cannot be guaranteed).
  weight_kinematics_turning_radius: 1 # Optimization weight for enforcing a minimum turning radius (only for carlike robots).
  weight_optimaltime: 1 # must be > 0
  weight_shortest_path: 0
  weight_obstacle: 50 # Optimization weight for keeping a minimum distance from obstacles
  weight_inflation: 0.2
  weight_dynamic_obstacle: 10 #
  weight_dynamic_obstacle_inflation: 0.2 # Optimization weight for the inflation penalty (should be small).
  weight_viapoint: 1
  weight_adapt_factor: 2 # Some special weights (currently weight_obstacle) are repeatedly scaled by this factor in each outer TEB iteration (weight_new = weight_old*factor). Increasing weights iteratively instead of setting a huge value a-priori leads to better numerical conditions of the underlying optimization problem.

  # Homotopy Class Planner
  # Activate parallel planning in distinctive topologies (requires much more CPU resources, since multiple trajectories are optimized at once)
  enable_homotopy_class_planning: True
  enable_multithreading: True
  max_number_classes: 4
  selection_cost_hysteresis: 1.0
  selection_prefer_initial_plan: 0.9
  selection_obst_cost_scale: 100.0
  selection_alternative_time_cost: False
  roadmap_graph_no_samples: 15
  roadmap_graph_area_width: 5
  roadmap_graph_area_length_scale: 1.0
  h_signature_prescaler: 0.5
  h_signature_threshold: 0.1
  obstacle_heading_threshold: 0.45
  switching_blocking_period: 0.0
  viapoints_all_candidates: True
  delete_detours_backwards: True
  max_ratio_detours_duration_best_duration: 3.0
  visualize_hc_graph: False
  visualize_with_time_as_z_axis_scale: False

  # Recovery

  shrink_horizon_backup: True
  shrink_horizon_min_duration: 5
  oscillation_recovery: True
  oscillation_v_eps: 0.1
  oscillation_omega_eps: 0.1
  oscillation_recovery_min_duration: 5
  oscillation_filter_duration: 5